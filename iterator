import java.util.Iterator;
import java.util.LinkedList;

public class App {

    public static void main(String[] args) {

        LinkedList<String> animals = new LinkedList<String>();

        animals.add("fox");
        animals.add("cat");
        animals.add("dog");
       
        
        // "Old" way of iterating through lists 
    
        Iterator<String> it = animals.iterator();

        while (it.hasNext()) {
            String value = it.next();
            System.out.println(value);
            
            if(value.equals("cat")) {
                it.remove();
            }
        }

        System.out.println();
        
        /*
         * If we want to add items to a list while iterating through
         * it, we use a ListIterator using the .listIterator() method.
         * ListIterator also has a previous() method,so that you can add items before
         * the current item.
         */

        // Modern iteration

        for (String animal : animals) {
            System.out.println(animal);
            
            
        }
    }

}
